{"ast":null,"code":"import MovieCard from '../components/MovieCard';\nexport default {\n  components: {\n    MovieCard\n  },\n  data: function () {\n    return {\n      movies: [],\n      genres: []\n    };\n  },\n\n  async mounted() {\n    this.fetchGenres();\n\n    try {\n      const response = await this.$http.get(\"/movie/popular\");\n      this.movies = response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  computed: {\n    posterPath() {\n      return \"https://image.tmdb.org/t/p/w500/\" + this.movie.poster_path;\n    }\n\n  },\n  methods: {\n    genreTypeName(genraId, index) {\n      for (const item of this.genres) {\n        if (item.id == genraId) {\n          if (this.movie.genre_ids.length - 1 == index) {\n            return item.name;\n          } else {\n            return item.name + \",\";\n          }\n        }\n      }\n    },\n\n    async fetchGenres() {\n      try {\n        const response = await this.$http.get(\"/genre/movie/list\");\n        this.genres = response.data.genres;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;EACAA;IACAC;EADA,CADA;EAIAC;IACA;MACAC,UADA;MAEAC;IAFA;EAIA,CATA;;EAUA;IACA;;IACA;MACA;MACA;IACA,CAHA,CAGA;MACAC;IACA;EACA,CAlBA;;EAmBAC;IACAC;MACA;IACA;;EAHA,CAnBA;EAwBAC;IACAC;MAEA;QACA;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;QAEA;MACA;IACA,CAbA;;IAcA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAJ;MACA;IACA;;EArBA;AAxBA","names":["components","MovieCard","data","movies","genres","console","computed","posterPath","methods","genreTypeName"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n<v-container>\n    <v-row>\n        <v-col  cols=\"14\" sm=\"3\" v-for=\"movie in movies\" :key=\"movie.id\"  >\n            <MovieCard :movie=\"movie\" :genres=\"genres\"/>\n        </v-col>\n    </v-row>\n</v-container>\n</template>\n\n<script>\nimport MovieCard from '../components/MovieCard'\nexport default {  \n  components :{\n      MovieCard,\n  },\n  data: function (){\n    return {\n      movies: [],\n      genres: []\n    };\n  },\n  async mounted(){\n    this.fetchGenres();\n    try {\n      const response = await this.$http.get(\"/movie/popular\");\n      this.movies = response.data.results;\n    }catch (error) {\n      console.log(error);\n    }\n  },\n  computed: {\n    posterPath(){\n      return \"https://image.tmdb.org/t/p/w500/\" + this.movie.poster_path\n    }\n  },\n  methods: {\n    genreTypeName(genraId, index) {\n\n      for(const item of this.genres) {\n        if(item.id == genraId) {\n          if(this.movie.genre_ids.length - 1 == index){\n            return item.name ;\n          }else {\n            return item.name + \",\";\n          }\n          \n        }\n      }\n    },\n    async fetchGenres() {\n      try {\n      const response = await this.$http.get(\"/genre/movie/list\");\n      this.genres = response.data.genres;\n    }catch (error) {\n      console.log(error);\n    }\n    }\n  },\n}\n</script>\n\n<style>\n  @import'~bootstrap/dist/css/bootstrap.css';\n</style>"]},"metadata":{},"sourceType":"module"}