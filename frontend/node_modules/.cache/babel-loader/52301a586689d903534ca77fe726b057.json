{"ast":null,"code":"// import MovieCard from '../components/MovieCard'\nexport default {\n  components: {// MovieCard,\n  },\n  data: function () {\n    return {\n      movie: '',\n      movies: [],\n      genres: []\n    };\n  },\n\n  async mounted() {\n    this.fetchGenres();\n\n    try {\n      const response = await this.$http.get(\"/movie/popular\");\n      this.movies = response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  methods: {\n    genreTypeName(movie, genraId, index) {\n      for (const item of this.genres) {\n        if (item.id == genraId) {\n          if (movie.genre_ids.length - 1 == index) {\n            return item.name;\n          } else {\n            return item.name + \",\";\n          }\n        }\n      }\n    },\n\n    async fetchGenres() {\n      try {\n        const response = await this.$http.get(\"/genre/movie/list\");\n        this.genres = response.data.genres;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiCA;AACA;EACAA,aACA;EADA,CADA;EAIAC;IACA;MACAC,SADA;MAEAC,UAFA;MAGAC;IAHA;EAKA,CAVA;;EAWA;IACA;;IACA;MACA;MACA;IACA,CAHA,CAGA;MACAC;IACA;EACA,CAnBA;;EAoBAC;IACAC;MAEA;QACA;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;QAEA;MACA;IACA,CAbA;;IAcA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAF;MACA;IACA;;EArBA;AApBA","names":["components","data","movie","movies","genres","console","methods","genreTypeName"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n        <v-col  cols=\"14\" sm=\"3\" v-for=\"movie in movies\" :key=\"movie.id\"  >\n          <template>\n            <v-hover v-slot=\"{hover}\" open-delay=\"200\" class=\"col\">\n              <v-card :elevation=\"hover ? 16:2\" :class=\"{'on-hover' : hover}\" class=\"card-body\" height=\"100%\">\n                <v-img :src=\"`https://image.tmdb.org/t/p/w500/${movie.poster_path}`\" class=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" role=\"img\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\"></v-img>\n                  <v-card-title class=\"subtitle-2\">{{movie.title}}</v-card-title>\n                  <v-card-text class=\"card-text align-items-center\">\n                      <span v-for=\"(genre, index) in movie.genre_ids\" :key=\"genre\">\n                            {{genreTypeName(movie, genre, index)}}\n                      </span>\n                      <div class=\"d-flex justify-content-between align-items-center\"> \n                          <!-- Checar se o botÃ£o funciona mais tarde! -->\n                          <v-btn depressed :to=\"`/movie/${movie.id}`\">Info</v-btn>\n                          <small class=\"text-muted my-4 subtitle-2 \">\n                            <v-rating :value=\"movie.vote_average / 2\" color=\"amber\" dense half-increments readonly size=\"14\"> </v-rating>\n                          <div class=\"grey--text ml-4\">\n                            {{movie.vote_average * 10}} % | {{movie.release_date}}\n                          </div>\n                          </small>\n                      </div>\n                  </v-card-text>\n              </v-card>\n          </v-hover>\n        </template>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n// import MovieCard from '../components/MovieCard'\nexport default {  \n  components :{\n      // MovieCard,\n  },\n  data: function (){\n    return {\n      movie: '',\n      movies: [],\n      genres: []\n    };\n  },\n  async mounted(){\n    this.fetchGenres();\n    try {\n      const response = await this.$http.get(\"/movie/popular\");\n      this.movies = response.data.results;\n    }catch (error) {\n      console.log(error);\n    }\n  },\n  methods: {\n    genreTypeName(movie, genraId, index) {\n\n      for(const item of this.genres) {\n        if(item.id == genraId) {\n          if(movie.genre_ids.length - 1 == index){\n            return item.name ;\n          }else {\n            return item.name + \",\";\n          }\n          \n        }\n      }\n    },\n    async fetchGenres() {\n      try {\n      const response = await this.$http.get(\"/genre/movie/list\");\n      this.genres = response.data.genres;\n    }catch (error) {\n      console.log(error);\n    }\n    }\n  },\n}\n</script>\n\n<style>\n  @import'~bootstrap/dist/css/bootstrap.css';\n</style>"]},"metadata":{},"sourceType":"module"}